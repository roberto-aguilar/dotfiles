#!/bin/bash

# `-e` Exit on error.
# `-u` Trait unset variables as an error.
set -eu

# Install Laravel devevelopment environment.
~/.local/share/omarchy/bin/omarchy-install-dev-env laravel

# Remove the need for `sudo` while installing node packages globally.
mkdir ~/.npm-packages
npm config set prefix "${HOME}/npm-packages"

# Optimize resolution for my monitors.
sed -i \
  -e 's/^env = GDK_SCALE,2/# &/' \
  -e 's/^monitor=,preferred,auto,auto/# &/' \
  -e 's/^# env = GDK_SCALE,1$/env = GDK_SCALE,1/' \
  -e 's/^# monitor=,preferred,auto,1$/monitor=,preferred,auto,1/' \
  "${HOME}/.config/hypr/monitors.conf"

# Allow to toggle between keyboard layouts.
sed -i \
  -e 's/^.*kb_layout.*/  kb_layout = us,es/' \
  -e 's/^\(.*kb_options = compose:caps\).*/\1,grp:alts_toggle/' \
  "${HOME}/.config/hypr/input.conf"

# Disable IDLE locking until the `hyprlock` bug is fixed upstream.
echo "exec-once = bash -lc 'sleep 0.5; pkill -x hypridle'" >>"${HOME}/.config/hypr/autostart.conf"

# Disable hardware rendered cursors to preven visual artifacts.
echo "env = WLR_NO_HARDWARE_CURSORS,1" >>"${HOME}/.config/hypr/envs.conf"

# Install Official Packages.
applications=(
  ollama
  ollama-cuda
  xdebug
)
for application in "${applications[@]}"; do
  sudo pacman -S --noconfirm "${application}"
done
unset application
unset applications

# Install AUR Packages.
applications=(
  jetbrains-toolbox
  slack-desktop
)
for application in "${applications[@]}"; do
  sudo yay -S --noconfirm "${application}"
done
unset application
unset applications

# Install Web Applications
web_applications=(
  "Claude|https://claude.ai/new|https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/png/claude-ai-light.png"
  "Todoist|https://app.todoist.com/app/today|https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/png/todoist.png"
)
for web_application in "${web_applications[@]}"; do
  IFS='|' read -r name url icon <<<"${web_application}"
  omarchy-webapp-install "${name}" "${url}" "${icon}"
done
unset web_application
unset web_applications

# Install lazygit configuration file.
mkdir -p "${HOME}/.config/lazygit"
ln -sf "${DOTFILES_DIRECTORY}/lazygit/config.yml" "${HOME}/.config/lazygit/config.yml"
